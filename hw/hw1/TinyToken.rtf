{\rtf1\ansi\ansicpg936\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #\
#  Class Token - Encapsulates the tokens in TINY\
#\
#   @type - the type of token (Category)\
#   @text - the text the token represents (Lexeme)\
#\
class Token\
	attr_accessor :type\
	attr_accessor :text\
\
# This is the only part of this class that you need to \
# modify.\
	EOF = "eof"\
	LPAREN = "("\
	RPAREN = ")"\
	ADDOP  = "+"\
   SUBOP = "-"\
	MULTOP = "*"\
	DIVOP = "/"\
	EQUALS = "="\
	PRINT = "print"\
	WS = "whitespace"\
	LETTER = "id"\
	NUMERIC = "numeric"\
	EPSILON = "epsilon"\
# add the rest of the tokens needed based on the grammar\
# specified in the Scanner class "TinyScanner.rb"\
\
#constructor\
	def initialize(type,text)\
		@type = type\
		@text = text\
	end\
	\
	def get_type\
		return @type\
	end\
	\
	def get_text\
		return @text\
	end\
	\
# to string method\
	def to_s\
		return "#\{@type\} #\{@text\}"\
	end\
end}